<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qi.yue.dao.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="qi.yue.dto.UserDTO">
		<id column="id" property="uid" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="school" property="school" jdbcType="VARCHAR" />
		<result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
		<result column="updated_at" property="updated_at" jdbcType="TIMESTAMP" />
		<result column="follower" property="follower" jdbcType="INTEGER" />
		<result column="token" property="token" jdbcType="VARCHAR" />
		<result column="hometown" property="hometown" jdbcType="VARCHAR" />
		<result column="face_url" property="face_url" jdbcType="VARCHAR" />
		<result column="signature" property="signature" jdbcType="VARCHAR" />
		<result column="tags" property="tagString" jdbcType="VARCHAR" />
		<result column="location" property="location" jdbcType="VARCHAR" />
		<result column="created_at" property="created_at" jdbcType="TIMESTAMP" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="following" property="following" jdbcType="INTEGER" />
		<result column="longitude" jdbcType="DECIMAL" property="longitude" />
		<result column="latitude" jdbcType="DECIMAL" property="latitude" />
		<result column="career" property="career" jdbcType="VARCHAR" />
		<result column="ride_read_id" property="ride_read_id" jdbcType="VARCHAR" />
		<result column="is_login" property="is_login" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="SimplifyResultMap" type="qi.yue.dto.SimplifyUserDTO">
		<id column="id" property="uid" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="face_url" property="face_url" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, username, password, sex, school, phonenumber, follower,
		following, token, hometown,
		face_url, signature, tags, location,
		birthday, career, longitude,
		latitude,
		created_at,
		updated_at,ride_read_id,is_login
	</sql>

	<sql id="User_Column">
		user.id, user.username, user.password, user.sex,
		user.school, user.phonenumber, user.follower,
		user.following,
		user.token, user.hometown,
		user.face_url, user.signature, user.tags,
		user.location,
		user.birthday, user.career, user.nickname,
		user.longitude,
		user.latitude,
		user.created_at,
		user.updated_at,user.ride_read_id
	</sql>
	<select id="findByIds" resultMap="SimplifyResultMap"
		parameterType="list">
		select
		id, username,sex,face_url
		from t_user
		where id in
		<foreach collection="list" item="userId" index="index" open="("
			close=")" separator=",">
			#{userId}
		</foreach>
	</select>
	<select id="find" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findByUsernameAndPassword" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from t_user
		where username=#{username,jdbcType=VARCHAR} and
		password=#{password,jdbcType=VARCHAR}
	</select>

	<select id="findByUidAndToken" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from t_user
		where id = #{id,jdbcType=INTEGER} and
		token=#{token,jdbcType=VARCHAR}
	</select>

	<select id="findByUsername" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user
		where username=#{username,jdbcType=VARCHAR}
	</select>

	<select id="findByPhonenumber" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user
		where phonenumber=#{phonenumber,jdbcType=VARCHAR}
	</select>

	<select id="findByRideReadId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user
		where ride_read_id=#{rideReadId,jdbcType=VARCHAR}
	</select>

	<select id="findThumbsUpUserByMid" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from t_user
		where
		t_user.id in
		(select user_id from t_thumbs_up where
		t_thumbs_up.moment_id=#{mid,jdbcType=INTEGER})
		limit
		#{currentNumber,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
	</select>
	<insert id="insert" parameterType="qi.yue.entity.User"
		useGeneratedKeys="true" keyProperty="id">
		insert into t_user (id, username,
		password,
		sex, school, phonenumber,
		follower, following, token,
		hometown, face_url, signature,
		tags, location, birthday,
		career,
		longitude,
		latitude, created_at, updated_at,ride_read_id,is_login
		)
		values
		(#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER},
		#{school,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR},
		#{follower,jdbcType=INTEGER}, #{following,jdbcType=INTEGER},
		#{token,jdbcType=VARCHAR},
		#{hometown,jdbcType=VARCHAR},
		#{faceUrl,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR},
		#{tags,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{career,jdbcType=VARCHAR},
		#{longitude,jdbcType=DECIMAL},
		#{latitude,jdbcType=DECIMAL},
		#{createdAt,jdbcType=TIMESTAMP},
		#{updatedAt,jdbcType=TIMESTAMP},
		#{rideReadId,jdbcType=VARCHAR},#{is_login,jdbcType=INTEGER})
	</insert>

	<update id="update" parameterType="qi.yue.entity.User">
		update t_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="school != null">
				school = #{school,jdbcType=VARCHAR},
			</if>
			<if test="phonenumber != null">
				phonenumber = #{phonenumber,jdbcType=VARCHAR},
			</if>
			<if test="follower != null">
				follower = #{follower,jdbcType=INTEGER},
			</if>
			<if test="following != null">
				following = #{following,jdbcType=INTEGER},
			</if>
			<if test="token != null">
				token = #{token,jdbcType=VARCHAR},
			</if>
			<if test="hometown != null">
				hometown = #{hometown,jdbcType=VARCHAR},
			</if>
			<if test="faceUrl != null">
				face_url = #{faceUrl,jdbcType=VARCHAR},
			</if>
			<if test="signature != null">
				signature = #{signature,jdbcType=VARCHAR},
			</if>
			<if test="tags != null">
				tags = #{tags,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				location = #{location,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="career != null">
				career = #{career,jdbcType=VARCHAR},
			</if>
			<if test="longitude != null">
				longitude = #{longitude,jdbcType=DECIMAL},
			</if>
			<if test="latitude != null">
				latitude = #{latitude,jdbcType=DECIMAL},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="rideReadId != null">
				ride_read_id=#{rideReadId,jdbcType=VARCHAR},
			</if>
			<if test="is_login != null">
				is_login=#{is_login,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateTokenById" parameterType="map">
		update t_user
		<set>
			<if test="token != null">
				token = #{token,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updatePasswordByUsernamae" parameterType="map">
		update t_user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where username = #{username,jdbcType=INTEGER}
	</update>

	<update id="updatePasswordByPhonenumber" parameterType="map">
		update t_user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where phonenumber = #{phonenumber,jdbcType=INTEGER}
	</update>

</mapper>